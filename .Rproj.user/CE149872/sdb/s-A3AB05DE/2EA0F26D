{
    "collab_server" : "",
    "contents" : "# M2algorithmique Vignette\n### Vincent Runge\n#### LaMME, Evry Paris-Saclay University\n### November 3, 2020\n\n> [Quick Start](#qs)\n\n> [A few examples](#ex)\n\n<a id=\"qs\"></a>\n\n## Quick Start\n\nThe `M2algorithmique` R package is an example package developed for students building their own R/Rcpp package as part of the algorithmic M2 courses. This package contains two algorithmic strategies (insertion sort and heap sort) implemented in R and in Rcpp.\n\nInsertion sort is of time complexity $O(n^2)$ as heap sort is $O(n\\log(n))$ (worst case complexity). We highlight two important features with this package:\n\n1. Rcpp algorithms are much efficient than R counterpart\n2. Time complexities can be evaluated and compared\n\n### Package installation\n\nWe install the package from Github:\n\n```r\ndevtools::install_github(\"vrunge/M2algorithmique\")\nlibrary(M2algorithmique)\n```\n\n### Simple data simulation\n\nWe simulate simple data as follows\n\n```r\nn <- 1000\nv <- sample(n)\n```\n\n`v` is a vector as size `n` containing all the integers from `1` to `n` (exactly one time) in any order.\n\nWe've implemeted 4 algorithms: \n\n- `insertion_sort` \n- `heap_sort` \n- `insertion_sort_Rcpp` \n- `heap_sort_Rcpp` \n\n\n\n<a id=\"ex\"></a>\n\n## Some examples\n\n### ",
    "created" : 1604423705449.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2997116795",
    "id" : "2EA0F26D",
    "lastKnownWriteTime" : 1604424947,
    "last_content_update" : 1604424947525,
    "path" : "~/Dropbox/A4_ENSEIGNEMENTS/M2_DS_Algorithmique/packagesRcpp/M2algorithmique/README.md",
    "project_path" : "README.md",
    "properties" : {
    },
    "relative_order" : 8,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "markdown"
}