?var
1+1
a <- 2
library(M2algorithmique)
rcpp_hello_world()
library(M2algorithmique)
library(M2algorithmique)
156:4
insertionsort_function(156:5)
insertionRcpp(56:4)
library(M2algorithmique)
insertionRcpp(56:4)
library(M2algorithmique)
insertionRcpp(56:4)
library(M2algorithmique)
mmergesort(sample(12))
library(M2algorithmique)
library(M2algorithmique)
mmergesort(sample(12))
binomial_CLT <- function(n, proba = 0.5, size = 10)
{
res <-  list(xbar = mean(rbinom(n = n,size = size, prob = proba)), mu = proba*size, s2 = proba*(1-proba)*size)
return(res)
}
######
uniform_CLT <- function(n)
{
res <-  list(xbar = mean(runif(n = n)), mu = 0.5, s2 = 1/12)
return(res)
}
#######
nb <- 3000
res <- NULL
n <- 300
size <- 3
#generate many Xbar
for(i in 1:nb){res <- c(res,binomial_CLT(n, size = size)$xbar)}
mu <- binomial_CLT(1, size = size)$mu
s2 <- binomial_CLT(1, size = size)$s2
Z <- (res-mu)/sqrt(s2/n)
#plot result
h <- hist(Z, breaks = 50, col = "grey")
xfit <- seq(min(Z), max(Z), length = 100)
yfit <- dnorm(xfit, mean = mean(Z), sd = sd(Z))
yfit <- yfit * diff(h$mids[1:2]) * length(Z)
lines(xfit, yfit, col = "red", lwd = 2)
##############################################
nb <- 2000
res <- NULL
n <- 5
#generate many Xbar
for(i in 1:nb){res <- c(res,uniform_CLT(n)$xbar)}
mu <- uniform_CLT(1)$mu
s2 <- uniform_CLT(1)$s2
Z <- (res-mu)/sqrt(s2/n)
#plot result
h <- hist(Z, breaks = 50, col = "grey")
xfit <- seq(min(Z), max(Z), length = 100)
yfit <- dnorm(xfit, mean = mean(Z), sd = sd(Z))
yfit <- yfit * diff(h$mids[1:2]) * length(Z)
lines(xfit, yfit, col = "red", lwd = 2)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
knitr::opts_chunk$set(echo = TRUE)
install.packages("gtools")
install.packages("reshape2")
?mutate
library(gtools) # Pour le tri des data frames
library(forcats) # Pour les factors
library(lubridate) # Pour les dates
library(lubridate) # Pour les dates
library(readxl) # Lecture des fichiers xlsx
library(stringr) # Pour manipuler les chaînes de caractères
library(stringi) # Pour manipuler les chaînes de caractères
library(reshape2) # Pour les data frames
?mutate
?mutate
NA_freq <- prescriptions %>% sapply(
function(y) sum(is.na(y))/length(y)
)
library(tidyverse, quietly = TRUE) # Pour ggplot2 et la manipulation des data frames
library(gtools) # Pour le tri des data frames
library(forcats) # Pour les factors
library(lubridate) # Pour les dates
library(readxl) # Lecture des fichiers xlsx
library(stringr) # Pour manipuler les chaînes de caractères
library(stringi) # Pour manipuler les chaînes de caractères
library(reshape2) # Pour les data frames
setwd("C:/Users/runge/Dropbox/A9_anticholinergique/#MyRCode/General/")
prescriptions <- read.csv(
file = "CH-Rouffach-Prescriptions-2008-2018_v1.txt",
sep = "|", dec = ".", header = TRUE, quote = "", fill = FALSE)
apply(prescriptions, 2, typeof)
dim(prescriptions)
# Conversion de IMC en réel
prescriptions <- prescriptions %>% mutate(IMC = as.double(IMC)/100)
# Conversion de Si.besoin en facteur
prescriptions <- prescriptions %>%
mutate(Si.besoin = as.factor(Si.besoin))
# Conversion de Heure.de.prise en facteur
prescriptions <- prescriptions %>%
mutate(Heure.de.prise = as.factor(Heure.de.prise))
# Conversion de Rythme.date.de.debut en date
prescriptions <- prescriptions %>%
mutate(Rythme.date.de.debut =
as.Date(Rythme.date.de.debut,
format = "%d/%m/%Y"))
# Conversion de Date.heure.debut.d.adm.
# (date avec heures minutes)
prescriptions <- prescriptions %>%
mutate(Date.heure.debut.d.adm. =
as.POSIXct(as.character(Date.heure.debut.d.adm.),
format = "%d/%m/%Y %H:%M"))
# Conversion de Date.heure.fin.d.adm.
# (date avec heures minutes)
prescriptions <- prescriptions %>%
mutate(Date.heure.fin.d.adm. =
as.POSIXct(as.character(Date.heure.fin.d.adm.),
format = "%d/%m/%Y %H:%M"))
levels(prescriptions$DCI.produit)[
levels(prescriptions$DCI.produit) == ""] <- NA
levels(prescriptions$observation.ligne.prescription)[
levels(prescriptions$observation.ligne.prescription) == ""] <- NA
prescriptions$Taille[prescriptions$Taille == 0.02] <- NA
# Conversion de DCI.produit en chaîne de caractères
prescriptions <- prescriptions %>%
mutate(DCI.produit = as.character(DCI.produit))
# Conversion de Nom.commercial.produit en chaîne de caractères
prescriptions <- prescriptions %>%
mutate(Nom.commercial.produit = as.character(Nom.commercial.produit))
# Conversion de observation.ligne.prescription
# en chaîne de caractères
prescriptions <- prescriptions %>%
mutate(observation.ligne.prescription =
as.character(observation.ligne.prescription))
class(prescriptions$Date.heure.debut.d.adm.)
class(prescriptions$Date.heure.fin.d.adm.)
subset(prescriptions, select =
-c(Date.heure.debut.d.adm., Date.heure.fin.d.adm.)) %>%
dplyr::summarise_all(class) %>% tidyr::gather(variable, class)
# On compte le nombre de NA avec NA_count
# which(is.na) renvoie les indices où is.na = TRUE
# => length(which(is.na)) = nombre de NA.
#NA_count <- sapply(prescriptions, function(y) length(which(is.na(y))))
NA_count <- prescriptions %>% sapply(
function(y) sum(is.na(y))
)
NA_freq <- prescriptions %>% sapply(
function(y) sum(is.na(y))/length(y)
)
NA_df <- data.frame(NA_count, NA_freq = paste(round(100*NA_freq,2), "%"))
NA_df
dim(NA_df)
barplot(NA_freq[NA_freq != 0])
par(mar = c(7, 4, 2, 2) + 0.2) #add room for the rotated labels
NA_freqNEW <- NA_freq[NA_freq != 0] #order mtcars data set by column "qsec"
end_point = 2*nrow(NA_freqNEW) - 0.5
barplot(NA_freqNEW, col = "grey50",
main = "",
ylab = "percent of NA", ylim = c(0,5 + max(NA_freqNEW)),
xlab = "",
space = 1)
#rotate 60 degrees (srt = 60)
text(seq(1.5, end_point, by = 2), par("usr")[3]-0.25,
srt = 60, adj = 1, xpd = TRUE,
labels = paste(rownames(NA_freqNEW)), cex = 0.65)
NA_freqNEW <- NA_freq[NA_freq != 0] #order mtcars data set by column "qsec"
end_point = 2*nrow(NA_freqNEW) - 0.5
end_point
NA_freqNEW
nrow(NA_freqNEW)
end_point = 2*length(NA_freqNEW) - 0.5
end_point
barplot(NA_freqNEW, col = "grey50",
main = "",
ylab = "percent of NA", ylim = c(0,5 + max(NA_freqNEW)),
xlab = "",
space = 1)
#rotate 60 degrees (srt = 60)
text(seq(1.5, end_point, by = 2), par("usr")[3]-0.25,
srt = 60, adj = 1, xpd = TRUE,
labels = paste(rownames(NA_freqNEW)), cex = 0.65)
par(mar = c(7, 4, 2, 2) + 0.2) #add room for the rotated labels
NA_freqNEW <- NA_freq[NA_freq != 0] #order mtcars data set by column "qsec"
end_point = 2*length(NA_freqNEW) - 0.5
barplot(NA_freqNEW, col = "grey50",
main = "",
ylab = "percent of NA", ylim = c(0,5 + max(NA_freqNEW)),
xlab = "",
space = 1)
#rotate 60 degrees (srt = 60)
text(seq(1.5, end_point, by = 2), par("usr")[3]-0.25,
srt = 60, adj = 1, xpd = TRUE,
labels = paste(rownames(NA_freqNEW)), cex = 0.65)
par(mar = c(7, 4, 2, 2) + 0.2) #add room for the rotated labels
NA_freqNEW <- NA_freq[NA_freq != 0] #order mtcars data set by column "qsec"
end_point = 2*length(NA_freqNEW) - 0.5
barplot(NA_freqNEW, col = "grey50",
main = "",
ylab = "percent of NA", ylim = c(0,5 + max(NA_freqNEW)),
xlab = "",
space = 1)
#rotate 60 degrees (srt = 60)
text(seq(1.5, end_point, by = 2),
srt = 60, adj = 1, xpd = TRUE,
labels = paste(rownames(NA_freqNEW)), cex = 0.65)
rownames(NA_freqNEW)
names(NA_freqNEW)
par(mar = c(7, 4, 2, 2) + 0.2) #add room for the rotated labels
NA_freqNEW <- NA_freq[NA_freq != 0] #order mtcars data set by column "qsec"
end_point = 2*length(NA_freqNEW) - 0.5
barplot(NA_freqNEW, col = "grey50",
main = "",
ylab = "percent of NA", ylim = c(0,5 + max(NA_freqNEW)),
xlab = "",
space = 1)
#rotate 60 degrees (srt = 60)
text(seq(1.5, end_point, by = 2),
srt = 60, adj = 1, xpd = TRUE,
labels = paste(names(NA_freqNEW)), cex = 0.65)
barplot(NA_freqNEW, col = "grey50",
main = "",
ylab = "percent of NA", ylim = c(0,5 + max(NA_freqNEW)),
xlab = "",
space = 1)
max(NA_freqNEW)
c(0,5 + max(NA_freqNEW))
max(NA_freqNEW)
par(mar = c(7, 4, 2, 2) + 0.2) #add room for the rotated labels
NA_freqNEW <- 100*NA_freq[NA_freq != 0] #order mtcars data set by column "qsec"
end_point = 2*length(NA_freqNEW) - 0.5
barplot(NA_freqNEW, col = "grey50",
main = "",
ylab = "percent of NA", ylim = c(0,5 + max(NA_freqNEW)),
xlab = "",
space = 1)
#rotate 60 degrees (srt = 60)
text(seq(1.5, end_point, by = 2),
srt = 60, adj = 1, xpd = TRUE,
labels = paste(names(NA_freqNEW)), cex = 0.65)
barplot(NA_freqNEW, col = "grey50",
main = "",
ylab = "percent of NA", ylim = c(0,5 + max(NA_freqNEW)),
xlab = "",
space = 1)
rotate_x <- function(data, column_to_plot, labels_vec, rot_angle) {
plt <- barplot(data[[column_to_plot]], col='steelblue', xaxt="n")
text(plt, par("usr")[3], labels = labels_vec, srt = rot_angle, adj = c(1.1,1.1), xpd = TRUE, cex=0.6)
}
rotate_x <- function(data, column_to_plot, labels_vec, rot_angle) {
plt <- barplot(data[[column_to_plot]], col='steelblue', xaxt="n")
text(plt, par("usr")[3], labels = labels_vec, srt = rot_angle, adj = c(1.1,1.1), xpd = TRUE, cex=0.6)
}
par(mar = c(7, 4, 2, 2) + 0.2) #add room for the rotated labels
NA_freqNEW <- 100*NA_freq[NA_freq != 0] #order mtcars data set by column "qsec"
end_point = 2*length(NA_freqNEW) - 0.5
barplot(NA_freqNEW, col = "grey50",
main = "",
ylab = "percent of NA", ylim = c(0,5 + max(NA_freqNEW)),
xlab = "",
space = 1)
#rotate 60 degrees (srt = 60)
rotate_x(NA_freqNEW, 'mpg', names(NA_freqNEW), 45)
rotate_x <- function(data, column_to_plot, labels_vec, rot_angle) {
plt <- barplot(data[[column_to_plot]], col='steelblue', xaxt="n")
text(plt, par("usr")[3], labels = labels_vec, srt = rot_angle, adj = c(1.1,1.1), xpd = TRUE, cex=0.6)
}
par(mar = c(7, 4, 2, 2) + 0.2) #add room for the rotated labels
NA_freqNEW <- 100*NA_freq[NA_freq != 0] #order mtcars data set by column "qsec"
end_point = 2*length(NA_freqNEW) - 0.5
barplot(NA_freqNEW, col = "grey50",
main = "",
ylab = "percent of NA", ylim = c(0,5 + max(NA_freqNEW)),
xlab = "",
space = 1)
#rotate 60 degrees (srt = 60)
rotate_x(NA_freqNEW, 'mpg', names(NA_freqNEW), 90)
plt <- barplot(data[column_to_plot], col='steelblue', xaxt="n")
rotate_x <- function(data, column_to_plot, labels_vec, rot_angle) {
plt <- barplot(data[column_to_plot], col='steelblue', xaxt="n")
text(plt, par("usr")[3], labels = labels_vec, srt = rot_angle, adj = c(1.1,1.1), xpd = TRUE, cex=0.6)
}
par(mar = c(7, 4, 2, 2) + 0.2) #add room for the rotated labels
NA_freqNEW <- 100*NA_freq[NA_freq != 0] #order mtcars data set by column "qsec"
end_point = 2*length(NA_freqNEW) - 0.5
barplot(NA_freqNEW, col = "grey50",
main = "",
ylab = "percent of NA", ylim = c(0,5 + max(NA_freqNEW)),
xlab = "",
space = 1)
#rotate 60 degrees (srt = 60)
rotate_x(NA_freqNEW, 'mpg', names(NA_freqNEW), 90)
names(NA_freqNEW)
rotate_x <- function(data, labels_vec, rot_angle) {
plt <- barplot(data, col='steelblue', xaxt="n")
text(plt, par("usr")[3], labels = labels_vec, srt = rot_angle, adj = c(1.1,1.1), xpd = TRUE, cex=0.6)
}
par(mar = c(7, 4, 2, 2) + 0.2) #add room for the rotated labels
NA_freqNEW <- 100*NA_freq[NA_freq != 0] #order mtcars data set by column "qsec"
end_point = 2*length(NA_freqNEW) - 0.5
barplot(NA_freqNEW, col = "grey50",
main = "",
ylab = "percent of NA", ylim = c(0,5 + max(NA_freqNEW)),
xlab = "",
space = 1)
#rotate 60 degrees (srt = 60)
rotate_x(NA_freqNEW, 'mpg', names(NA_freqNEW), 90)
rotate_x <- function(data, labels_vec, rot_angle) {
plt <- barplot(data, col='steelblue', xaxt="n")
text(plt, par("usr")[3], labels = labels_vec, srt = rot_angle, adj = c(1.1,1.1), xpd = TRUE, cex=0.6)
}
par(mar = c(7, 4, 2, 2) + 0.2) #add room for the rotated labels
NA_freqNEW <- 100*NA_freq[NA_freq != 0] #order mtcars data set by column "qsec"
end_point = 2*length(NA_freqNEW) - 0.5
rotate_x(NA_freqNEW', names(NA_freqNEW), 90)
rotate_x <- function(data, labels_vec, rot_angle) {
plt <- barplot(data, col='steelblue', xaxt="n")
text(plt, par("usr")[3], labels = labels_vec, srt = rot_angle, adj = c(1.1,1.1), xpd = TRUE, cex=0.6)
}
par(mar = c(7, 4, 2, 2) + 0.2) #add room for the rotated labels
NA_freqNEW <- 100*NA_freq[NA_freq != 0] #order mtcars data set by column "qsec"
end_point = 2*length(NA_freqNEW) - 0.5
rotate_x(NA_freqNEW, names(NA_freqNEW), 90)
rotate_x <- function(data, labels_vec, rot_angle) {
plt <- barplot(data, col='steelblue', xaxt="n", ylim = c(0,100))
text(plt, par("usr")[3], labels = labels_vec, srt = rot_angle, adj = c(1.1,1.1), xpd = TRUE, cex=0.6)
}
par(mar = c(7, 4, 2, 2) + 0.2) #add room for the rotated labels
NA_freqNEW <- 100*NA_freq[NA_freq != 0] #order mtcars data set by column "qsec"
end_point = 2*length(NA_freqNEW) - 0.5
rotate_x(NA_freqNEW, names(NA_freqNEW), 90)
nb_modalites_df <- prescriptions %>%
sapply(function(y) length(unique(y)))
nb_modalites_df
nb_modalites_df[1]
nb_modalites_df[2]
length(nb_modalites_df)
setwd("C:/Users/runge/Dropbox/A9_anticholinergique/#MyRCode/General/")
setwd("C:/Users/runge/Dropbox/A9_anticholinergique/#MyRCode/General/")
setwd("C:/Users/runge/Dropbox/A9_anticholinergique/#MyRCode/General/")
load(file = "Dates_debut_normalisees.Rda")
load(file = "Dates_debut_normalisees.Rda")
setwd("C:/Users/runge/Dropbox/A9_anticholinergique/#MyRCode/General/")
load(file = "Dates_debut_normalisees.Rda")
